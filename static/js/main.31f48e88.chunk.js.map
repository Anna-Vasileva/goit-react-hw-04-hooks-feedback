{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","s","title","statistics","FeedbackOptions","options","onLeaveFeedback","map","el","onClick","btn","uuidv4","Section","children","Notification","message","App","useState","setGood","setNeutral","setBad","countTotalFeedback","Object","keys","nameGrade","PrevGood","PrevNeutral","PrevBad","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,WAAa,iC,mBCAjED,EAAOC,QAAU,CAAC,IAAM,+B,gBCAxBD,EAAOC,QAAU,CAAC,MAAQ,yB,gBCA1BD,EAAOC,QAAU,CAAC,QAAU,gC,6HCwBbC,EArBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qCACE,oBAAIC,UAAWC,IAAEC,MAAjB,wBACA,oBAAGF,UAAWC,IAAEE,WAAhB,mBAAmCR,KACnC,oBAAGK,UAAWC,IAAEE,WAAhB,sBAAsCP,KACtC,oBAAGI,UAAWC,IAAEE,WAAhB,kBAAkCN,KAClC,oBAAGG,UAAWC,IAAEE,WAAhB,oBAAoCL,OACpC,oBAAGE,UAAWC,IAAEE,WAAhB,gCAAgDJ,IAAhD,W,wBCWSK,EAlBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OAAOD,EAAQE,KAAI,SAACC,GAClB,OACE,wBACEC,QAAS,kBAAMH,EAAgBE,IAC/BR,UAAWC,IAAES,IAFf,SAKGF,GAFIG,mB,gBCMEC,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUX,EAAY,EAAZA,MAC3B,OACE,qCACGA,GAAS,oBAAIF,UAAWC,IAAEC,MAAjB,SAAyBA,IAClCW,M,gBCKQC,EATM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,mCACE,oBAAIf,UAAWC,IAAEc,QAAjB,SAA2BA,OCmDlBC,MApDf,WACE,MAAwBC,mBAAS,GAAjC,mBAAOtB,EAAP,KAAauB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOrB,EAAP,KAAgBuB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOpB,EAAP,KAAYuB,EAAZ,KAiBMC,EAAqB,WACzB,OAAO1B,EAAOE,EAAMD,GAOtB,OACE,qCACE,cAAC,EAAD,CAASM,MAAM,wBAAf,SACE,cAAC,EAAD,CACEG,QAASiB,OAAOC,KAAK,CAAE5B,OAAMC,UAASC,QACtCS,gBA5BS,SAACkB,GAChB,OAAQA,GACN,IAAK,OACHN,GAAQ,SAACO,GAAD,OAAcA,EAAW,KACjC,MACF,IAAK,UACHN,GAAW,SAACO,GAAD,OAAiBA,EAAc,KAC1C,MACF,IAAK,MACHN,GAAO,SAACO,GAAD,OAAaA,EAAU,KAC9B,MACF,QACE,aAmBF,cAAC,EAAD,CAASzB,MAAM,GAAf,SACGmB,IACC,cAAC,EAAD,CACE1B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOuB,EACPtB,mBApB8B,WACtC,OAAOsB,IACHO,KAAKC,MAAc,IAAPlC,EAAc0B,KAC1B,KAoBE,cAAC,EAAD,CAAcN,QAAQ,4B,MC/ChCe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.31f48e88.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Statistics_title__40hZK\",\"statistics\":\"Statistics_statistics__kG_U3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__1H804\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__1NeoW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__gLqiH\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Statistics.module.css\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <>\r\n      <h2 className={s.title}>Statistics</h2>\r\n      <p className={s.statistics}>Good: {good}</p>\r\n      <p className={s.statistics}>Neutral: {neutral}</p>\r\n      <p className={s.statistics}>Bad: {bad}</p>\r\n      <p className={s.statistics}>Total: {total()}</p>\r\n      <p className={s.statistics}>Positive feedback: {positivePercentage()}%</p>\r\n    </>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.func.isRequired,\r\n  positivePercentage: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport s from \"./FeedbackOptions.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return options.map((el) => {\r\n    return (\r\n      <button\r\n        onClick={() => onLeaveFeedback(el)}\r\n        className={s.btn}\r\n        key={uuidv4()}\r\n      >\r\n        {el}\r\n      </button>\r\n    );\r\n  });\r\n};\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Section.module.css\";\r\n\r\nconst Section = ({ children, title }) => {\r\n  return (\r\n    <>\r\n      {title && <h1 className={s.title}>{title}</h1>}\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  title: PropTypes.string,\r\n};\r\nexport default Section;\r\n","import React from \"react\";\r\nimport s from \"./Notification.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return (\r\n    <>\r\n      <h3 className={s.message}>{message}</h3>\r\n    </>\r\n  );\r\n};\r\nNotification.propTypes = { message: PropTypes.string.isRequired };\r\n\r\nexport default Notification;\r\n","import { useState } from \"react\";\r\nimport Statistics from \"./components/Statistics\";\r\nimport FeedbackOptions from \"./components/FeedbackOptions\";\r\nimport Section from \"./components/Section\";\r\nimport Notification from \"./components/Notification\";\r\n\r\nfunction App() {\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n\r\n  const addGrade = (nameGrade) => {\r\n    switch (nameGrade) {\r\n      case \"good\":\r\n        setGood((PrevGood) => PrevGood + 1);\r\n        break;\r\n      case \"neutral\":\r\n        setNeutral((PrevNeutral) => PrevNeutral + 1);\r\n        break;\r\n      case \"bad\":\r\n        setBad((PrevBad) => PrevBad + 1);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n  const countTotalFeedback = () => {\r\n    return good + bad + neutral;\r\n  };\r\n  const countPositiveFeedbackPercentage = () => {\r\n    return countTotalFeedback()\r\n      ? Math.round((good * 100) / countTotalFeedback())\r\n      : 0;\r\n  };\r\n  return (\r\n    <>\r\n      <Section title=\"Please leave feedback\">\r\n        <FeedbackOptions\r\n          options={Object.keys({ good, neutral, bad })}\r\n          onLeaveFeedback={addGrade}\r\n        />\r\n      </Section>\r\n      <Section title=\"\">\r\n        {countTotalFeedback() ? (\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={countTotalFeedback}\r\n            positivePercentage={countPositiveFeedbackPercentage}\r\n          />\r\n        ) : (\r\n          <Notification message=\"No feedback given\" />\r\n        )}\r\n      </Section>\r\n    </>\r\n  );\r\n}\r\nexport default App;\r\n\r\n// class OldApp extends Component {\r\n//   state = {\r\n//     good: 0,\r\n//     neutral: 0,\r\n//     bad: 0,\r\n//   };\r\n\r\n//   addGrade = (nameGrade) => {\r\n//     this.setState((prevState) => {\r\n//       return { [nameGrade]: prevState[nameGrade] + 1 };\r\n//     });\r\n//   };\r\n//   countTotalFeedback = () => {\r\n//     return this.state.bad + this.state.good + this.state.neutral;\r\n//   };\r\n//   countPositiveFeedbackPercentage = () => {\r\n//     const total = this.countTotalFeedback();\r\n//     return total\r\n//       ? Math.round((this.state.good * 100) / this.countTotalFeedback())\r\n//       : 0;\r\n//   };\r\n//   render() {\r\n//     const { good, neutral, bad } = this.state;\r\n//     return (\r\n//       <>\r\n//         <Section title=\"Please leave feedback\">\r\n//           <FeedbackOptions\r\n//             options={Object.keys(this.state)}\r\n//             onLeaveFeedback={this.addGrade}\r\n//           />\r\n//         </Section>\r\n//         <Section title=\"\">\r\n//           {this.countTotalFeedback() ? (\r\n//             <Statistics\r\n//               good={good}\r\n//               neutral={neutral}\r\n//               bad={bad}\r\n//               total={this.countTotalFeedback}\r\n//               positivePercentage={this.countPositiveFeedbackPercentage}\r\n//             />\r\n//           ) : (\r\n//             <Notification message=\"No feedback given\" />\r\n//           )}\r\n//         </Section>\r\n//       </>\r\n//     );\r\n//   }\r\n// }\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}